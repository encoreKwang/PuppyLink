# 프로세스의 실행되는 권한, 보안상 root를 사용하지 않습니다.
user  nginx;
# 몇 개의 워커 프로세스를 생성할 것인지?
# auto 자동
worker_processes  1;
# 로그레벨 지정 파일
error_log  /var/log/nginx/error.log warn;
# nginx의 마스터 프로세스 id 정보가 저장
pid        /var/run/nginx.pid;

events {
  # 하나의 프로세스가 처리할 수 있는 커넥션의 숫자
  worker_connections  1024;
}

http {
  # MIME 타입 과 파일 확장자명 목록을 지정하는 파일위치
  include       /etc/nginx/mime.types;
  # 옥텟 스트림 기반의 http를 사용한다는 지시어
  default_type  application/octet-stream;
  # 호그 형식을 지정, 후술한 로그 형태에 따라 로그가 작성되고 기록된다.
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  # 접속시 커넥션 유지 시간 지정
  keepalive_timeout  65;

  server_tokens     off;
  # origin 서버를 명시, WAS, 웹 어플리케이션 서버를 의미
  upstream puppylink {
    server puppy-spring:8085;
  }
  # 하나의 웹 사이트를 선언하는데 사용
  # server 블록이 여러 개이면 한 개의 머신에 여러 웹사이트를 서빙할 수 있음
  server {
    # 웹 사이트가 바라보는 포트
    listen       80;
    # 클라이언트가 접속하는 서버(주로 도메인). 이것과 실제로 들어온 request의 header에
    # 명시된 값이 일치하는지 확인해서 server를 분기
    server_name  localhost;

    root  /usr/share/nginx/html;
    index index.html;
    # 특정 웹 사이드의 url을 처리
    location / {
        try_files $uri $uri/ @router;
    }

    location /members/login {
        proxy_pass         http://puppylink/members/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
    }

    location /members/signup {
        proxy_pass         http://puppylink/members/signup;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
    }

    # Browser caching of static assets.
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
    expires 7d;
    add_header Cache-Control "public, no-transform";
    }

    # Media: images, icons, video, audio send expires headers
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }

    # Web fonts send expires headers
    location ~* \.(?:eot|otf|ttf|woff|woff2)$ {
      expires 3M;
      access_log off;
      add_header Cache-Control "public";
    }

    # CSS and Javascript send expires headers.
    location ~* \.(?:css|js)$ {
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # HTML send expires headers.
    location ~* \.(html)$ {
      expires 7d;
      access_log off;
      add_header Cache-Control "public";
    }

    location @router {
        rewrite ^(.+)$ /index.html last;
    }
  }
}